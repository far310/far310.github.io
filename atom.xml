<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小芳 All</title>
  <icon>https://www.gravatar.com/avatar/916e401ced5c66024bbe596fe8dc2c68</icon>
  <subtitle>感谢有你相伴🌹</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.xn--yet221g.top/"/>
  <updated>2018-06-27T06:47:15.405Z</updated>
  <id>http://www.xn--yet221g.top/</id>
  
  <author>
    <name>小芳 All</name>
    <email>310253936@qq.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MySQL常用命令</title>
    <link href="http://www.xn--yet221g.top/2018/06/27/MySQL/"/>
    <id>http://www.xn--yet221g.top/2018/06/27/MySQL/</id>
    <published>2018-06-27T14:13:06.000Z</published>
    <updated>2018-06-27T06:47:15.405Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.imgur.com/qzGnrgx.jpg" alt=""></p><a id="more"></a><hr><p><strong>命令行连接数据库</strong></p><blockquote><p>mysql h-服务器主机地址 -u用户名 -p密码<br>如果是在本机操作，可省略-h参数，不是本机可以填写地址，或者端3306<br>示例：mysql -u root -p sa</p></blockquote><p><strong>查看当前mysql版本信息及用户名</strong></p><blockquote><p>select version(),user();<br>version()返回版本号，user()返回连接数据库用户名</p></blockquote><p><strong>创建数据库</strong></p><blockquote><p>create database 数据库名;</p></blockquote><p><strong>查看数据库列表</strong></p><blockquote><p>show databases;</p></blockquote><p><strong>选择数据库</strong></p><blockquote><p>use 数据库名;<br>示例：use myschool;</p></blockquote><p><strong>删除数据库</strong></p><blockquote><p>drop database 数据库名;<br>示例：drop database myschool;<br>警告：不要把系统默认的数据库删了，如果删了需要重装。</p></blockquote><p><strong>创建数据库表</strong></p><blockquote><p>首先选择数据库，在创建表<br>cerate table [if not exists] 表名( //if not exists 应该是判断表是否存在<br>    字段1 数据类型 [字段属性|约束] [索引] [注释] ,<br>    字段2 数据类型 [字段属性|约束] [索引] [注释]<br>)[表类型] [表字符集] [注释];<br>示例：<br>cerate table myschool(<br>    No int(4) primary key,//primary key 设置主键 //not null 非空约束<br>    name char(10)<br>);</p></blockquote><p><strong>添加数据</strong></p><blockquote><p>insert into 表名 value(值1),(值2),(值3);<br>示例：insert into name value(‘1’),(‘2’),(‘3’);</p></blockquote><p><strong>字段的约束及属性</strong></p><blockquote><p>not null 非空约束<br>default 默认约束<br>unique key(‘字段’) 唯一约束<br>primary key 主键约束<br>foreign key (‘主表字段’) 外键约束<br>auto_increment 自动增长 标识列</p></blockquote><p><strong>注释</strong></p><blockquote><p>create table test(<br>    id int(11) unsigned//唯一约束 comment ‘编号’<br>)comment=’测试表’;</p></blockquote><p><strong>查看表</strong></p><blockquote><p>show tables;</p></blockquote><p><strong>查看表的定义</strong></p><blockquote><p>describe 表名;<br>desc 表名;<br>示例：use myschool;desc student;</p></blockquote><p><strong>删除表</strong></p><blockquote><p>drop table [if exists] 表名;</p></blockquote><p><strong>mysql帮助</strong></p><blockquote><p>help <code>查询的关键字</code>;</p></blockquote><p><strong>修改表名</strong></p><blockquote><p>alter table&lt;旧表名&gt; rename [to] &lt;新表名&gt;;\to为可选参数，使用与否不影响结果。仅修改表名，表结构不表<br>示例：alter table student rename stu;</p></blockquote><p><strong>添加字段</strong></p><blockquote><p>alter table 表名 add 字段名 数据类型 [属性];<br>示例：alter table add pwd varchar(50) not null;</p></blockquote><p><strong>修改字段</strong></p><blockquote><p>alter table 表名 change 原字段 新字段 数据类型 [属性];<br>示例：alter table demo change name username char(2) not null;</p></blockquote><p><strong>删除字段</strong></p><blockquote><p>alter table 表名 drop 字段名;<br>示例：alter table demo drop pwd;</p></blockquote><p><strong>添加主外键约束</strong></p><blockquote><p>alter table 表名 add constraint 主键名 primary key 表名(主键字段); //主键名以pk_开头<br>示例：alter table grade add constraint pk_grade primary key grade(gradeId);</p></blockquote><p><strong>组合主键</strong></p><blockquote><p>primary key(主键字段1，主键字段2);</p></blockquote><p><strong>添加外键约束</strong></p><blockquote><p>alter table 表名//从表 add constraint 外键名 foreign key(外键字段) references 关键表名(关联字段)//主表; \外键名以fk_开头<br>示例：alter table student add constraint fk_student_grade foreign key(gradeId) references grade(gradeId);</p></blockquote><p><strong>备份</strong></p><blockquote><p>方式1：<br>insert into 新表(字段1，字段2)\新表必须存在<br>select 字段1，字段2<br>from 原表;<br>方式2：<br>create table 新表（select 字段1，字段2 from 原表）;</p></blockquote><p><strong>删除数据</strong></p><blockquote><p>delete from 表名 [where条件];条件删除，标识列继续<br>truncate table 表名;删除全部数据，标识列从头开始</p></blockquote><p><strong>limit子句</strong></p><blockquote><p>limit [从第几条开始查\从0开始，行数]<br>示例：limit 4,4;</p></blockquote><p><strong>执行事务</strong></p><blockquote><p>开始事务：begin;<br>提交事务：commit;<br>撤销事务：rollback;</p></blockquote><p><strong>使用sql语句创建视图</strong></p><blockquote><p>create view 视图名<br>as </p></blockquote><p>&lt;select语句&gt;</p><p><strong>使用sql语句删除视图</strong></p><blockquote><p>drop view [if exists] 视图名;</p></blockquote><p><strong>查看视图</strong></p><blockquote><p>select 字段1，字段2 from 视图名</p></blockquote><p><strong>数据备份</strong></p><blockquote><p>mysqldump -u 登录名 -p 密码 要备份的数据 [表名] &gt; 文件名称</p></blockquote><blockquote><p>数据还原 -u 登录名 -p 密码 &lt; 文件名称</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://i.imgur.com/qzGnrgx.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="MySQL" scheme="http://www.xn--yet221g.top/categories/MySQL/"/>
    
    
      <category term="MySQL" scheme="http://www.xn--yet221g.top/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Hexo命令</title>
    <link href="http://www.xn--yet221g.top/2018/06/25/Hexo/"/>
    <id>http://www.xn--yet221g.top/2018/06/25/Hexo/</id>
    <published>2018-06-25T14:13:06.000Z</published>
    <updated>2018-06-25T02:56:16.467Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.imgur.com/xMoYpRM.jpg" alt=""></p><a id="more"></a><hr><p><strong>hexo 命令</strong></p><blockquote><p>hexo new “postName” #新建文章<br>hexo new page “pageName” #新建页面<br>hexo generate #生成静态页面至public目录<br>hexo server #开启预览访问端口（默认端口4000，’ctrl + c’关闭server）<br>hexo deploy #将.deploy目录部署到GitHub<br>hexo help  # 查看帮助<br>hexo version  #查看Hexo的版本<br>hexo deploy -g  #生成加部署<br>hexo server -g  #生成加预览</p></blockquote><p><strong>命令的简写</strong></p><blockquote><p>hexo n == hexo new<br>hexo g == hexo generate<br>hexo s == hexo server<br>hexo d == hexo deploy</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://i.imgur.com/xMoYpRM.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo" scheme="http://www.xn--yet221g.top/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://www.xn--yet221g.top/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Git常用命令</title>
    <link href="http://www.xn--yet221g.top/2018/06/24/Git/"/>
    <id>http://www.xn--yet221g.top/2018/06/24/Git/</id>
    <published>2018-06-24T14:13:06.000Z</published>
    <updated>2018-06-24T10:54:22.412Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.imgur.com/x9aM8vk.png" alt=""></p><a id="more"></a><hr><p><strong>1. git diff 文件全局名</strong></p><blockquote><p>对比文件与当前版本库的不同。<br>PS：效果等同：<br>git diff HEAD – 文件全局名</p></blockquote><p><strong>2. cat 文件全局名 </strong></p><blockquote><p>查看文件内容</p></blockquote><p><strong>3. git log</strong></p><blockquote><p>查看提交版本日志（只展示当前所在版本及以前版本）。<br>PS：单排显示：<br>git log –pretty=oneline<br>版本号简写显示：<br>git log –pretty=oneline –abbrev-commit<br>时间线显示：<br>git log –graph –pretty=oneline –abbrev-commit</p></blockquote><p><strong>4. git reflog</strong></p><blockquote><p>查看提交版本日志（展示所有版本）</p></blockquote><p><strong>5. git reset –hard HEAD^</strong></p><blockquote><p>PS：版本穿梭，HEAD表示当前版本，HEAD^表示上一版本，HEAD^^表示上两个版本…</p></blockquote><p><strong>6. git reset –hard HEAD~1</strong></p><blockquote><p>PS：版本穿梭，HEAD表示当前版本，HEAD~1表示上一版本，HEAD~2表示上两个版本…</p></blockquote><p><strong>7. git reset –hard 版本号</strong></p><blockquote><p>PS：版本穿梭，版本号不必32位都写全，一般写7位就可以了，git会自己去查找。</p></blockquote><p><strong>8. git checkout – 文件全局名</strong></p><blockquote><p>工作区文件内容会被版本库上最新的内容覆盖</p></blockquote><p><strong>9. git reset HEAD 文件全局名</strong></p><blockquote><p>这样可以清空暂存区，而工作区的内容不变，所以工作区文件状态会发生变化</p></blockquote><p><strong>10. git rm 文件全局名</strong></p><blockquote><p>删除文件<br>PS：只有提交至版本库的文件才能rm，只是在工作区或暂存区是不能使用rm的</p></blockquote><p><strong>11. ssh-keygen -t rsa -C “<a href="mailto:310253936@qq.com" target="_blank" rel="noopener">310253936@qq.com</a>“</strong></p><blockquote><p>PS:邮箱是写自己的<br>生成ssh key</p></blockquote><p><strong>12. git remote add origin <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>:qwebh3210/gittest.git</strong></p><blockquote><p>本地仓库关联远程仓库<br>PS：也可以用http协议关联：<br>git remote add origin <a href="https://github.com/qwebh3210/gittest.git" target="_blank" rel="noopener">https://github.com/qwebh3210/gittest.git</a></p></blockquote><p><strong>13. git push -u origin master</strong></p><blockquote><p>把本地仓库当前分支推送到远程仓库指定分支<br>PS：第一次推送需要参数-u进行验证，之后不需要</p></blockquote><p><strong>14. git clone 远程仓库地址</strong></p><blockquote><p>克隆远程仓库<br>PS：git clone下来的只有master分支</p></blockquote><p><strong>15. git add 文件全局名</strong></p><blockquote><p>把文件添加至暂存区<br>PS：删除的文件不需要add，可以直接commit</p></blockquote><p><strong>16. git log -1</strong></p><blockquote><p>PS：显示最后一次提交信息（作者、时间、提交注释）</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://i.imgur.com/x9aM8vk.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Git" scheme="http://www.xn--yet221g.top/categories/Git/"/>
    
    
      <category term="Git" scheme="http://www.xn--yet221g.top/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>会摆造型的数字时钟</title>
    <link href="http://www.xn--yet221g.top/2018/06/23/%E6%97%B6%E9%97%B4/"/>
    <id>http://www.xn--yet221g.top/2018/06/23/时间/</id>
    <published>2018-06-23T14:13:06.000Z</published>
    <updated>2018-06-29T01:55:51.691Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.imgur.com/bzZE0yL.jpg" alt=""></p><h2 id="会摆造型的数字时钟会是什么样子呢？"><a href="#会摆造型的数字时钟会是什么样子呢？" class="headerlink" title="会摆造型的数字时钟会是什么样子呢？"></a>会摆造型的数字时钟会是什么样子呢？</h2><a id="more"></a><ul><li>页面效果如下：<br><img src="https://i.imgur.com/vBA6af3.png" alt=""></li></ul><ol><li><p>JS代码如下:</p><blockquote><p><code>&lt;script charset=&quot;Shift_JIS&quot; src=&quot;http://chabudai.sakura.ne.jp/blogparts/honehoneclock/honehone_clock_tr.js&quot; &gt;&lt;/script&gt;</code></p></blockquote></li><li><p>HTML代码如下：</p><blockquote><p><code>&lt;embed width=&quot;320&quot; height=&quot;140&quot; align=&quot;middle&quot; pluginspage=&quot;http://www.macromedia.com/go/getflashplayer&quot; type=&quot;application/x-shockwave-flash&quot; allowscriptaccess=&quot;always&quot; name=&quot;honehoneclock&quot; bgcolor=&quot;#ffffff&quot; quality=&quot;high&quot; src=&quot;http://chabudai.sakura.ne.jp/blogparts/honehoneclock/honehone_clock_tr.swf&quot; wmode=&quot;transparent&quot;/&gt;</code></p></blockquote></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://i.imgur.com/bzZE0yL.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;会摆造型的数字时钟会是什么样子呢？&quot;&gt;&lt;a href=&quot;#会摆造型的数字时钟会是什么样子呢？&quot; class=&quot;headerlink&quot; title=&quot;会摆造型的数字时钟会是什么样子呢？&quot;&gt;&lt;/a&gt;会摆造型的数字时钟会是什么样子呢？&lt;/h2&gt;
    
    </summary>
    
      <category term="HTML" scheme="http://www.xn--yet221g.top/categories/HTML/"/>
    
    
      <category term="HTML" scheme="http://www.xn--yet221g.top/tags/HTML/"/>
    
  </entry>
  
</feed>
