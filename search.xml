<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Eclipse的MyBatis插件]]></title>
    <url>%2F2018%2F07%2F06%2FEclipse%E7%9A%84MyBatis%E6%8F%92%E4%BB%B6%2F</url>
    <content type="text"><![CDATA[分享连接：https://github.com/mybatis/mybatipse]]></content>
      <categories>
        <category>Eclipse插件</category>
      </categories>
      <tags>
        <tag>Eclipse插件</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Eclipse编辑Spring配置文件xml时自动提示类class包名]]></title>
    <url>%2F2018%2F07%2F06%2FEclipse%E7%BC%96%E8%BE%91Spring%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6xml%E6%97%B6%E8%87%AA%E5%8A%A8%E6%8F%90%E7%A4%BA%E7%B1%BBclass%E5%8C%85%E5%90%8D%2F</url>
    <content type="text"><![CDATA[分享连接：https://blog.csdn.net/HH775313602/article/details/70176531正如ta所说 不行的话就多试几遍，博主一次成功的]]></content>
      <categories>
        <category>Eclipse插件</category>
      </categories>
      <tags>
        <tag>Eclipse插件</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MySQL常用命令]]></title>
    <url>%2F2018%2F06%2F27%2FMySQL%2F</url>
    <content type="text"><![CDATA[命令行连接数据库 mysql h-服务器主机地址 -u用户名 -p密码如果是在本机操作，可省略-h参数，不是本机可以填写地址，或者端3306示例：mysql -u root -p sa 查看当前mysql版本信息及用户名 select version(),user();version()返回版本号，user()返回连接数据库用户名 创建数据库 create database 数据库名; 查看数据库列表 show databases; 选择数据库 use 数据库名;示例：use myschool; 删除数据库 drop database 数据库名;示例：drop database myschool;警告：不要把系统默认的数据库删了，如果删了需要重装。 创建数据库表 首先选择数据库，在创建表cerate table [if not exists] 表名( //if not exists 应该是判断表是否存在 字段1 数据类型 [字段属性|约束] [索引] [注释] , 字段2 数据类型 [字段属性|约束] [索引] [注释])[表类型] [表字符集] [注释];示例：cerate table myschool( No int(4) primary key,//primary key 设置主键 //not null 非空约束 name char(10)); 添加数据 insert into 表名 value(值1),(值2),(值3);示例：insert into name value(‘1’),(‘2’),(‘3’); 字段的约束及属性 not null 非空约束default 默认约束unique key(‘字段’) 唯一约束primary key 主键约束foreign key (‘主表字段’) 外键约束auto_increment 自动增长 标识列 注释 create table test( id int(11) unsigned//唯一约束 comment ‘编号’)comment=’测试表’; 查看表 show tables; 查看表的定义 describe 表名;desc 表名;示例：use myschool;desc student; 删除表 drop table [if exists] 表名; mysql帮助 help 查询的关键字; 修改表名 alter table&lt;旧表名&gt; rename [to] &lt;新表名&gt;;\to为可选参数，使用与否不影响结果。仅修改表名，表结构不表示例：alter table student rename stu; 添加字段 alter table 表名 add 字段名 数据类型 [属性];示例：alter table add pwd varchar(50) not null; 修改字段 alter table 表名 change 原字段 新字段 数据类型 [属性];示例：alter table demo change name username char(2) not null; 删除字段 alter table 表名 drop 字段名;示例：alter table demo drop pwd; 添加主外键约束 alter table 表名 add constraint 主键名 primary key 表名(主键字段); //主键名以pk_开头示例：alter table grade add constraint pk_grade primary key grade(gradeId); 组合主键 primary key(主键字段1，主键字段2); 添加外键约束 alter table 表名//从表 add constraint 外键名 foreign key(外键字段) references 关键表名(关联字段)//主表; \外键名以fk_开头示例：alter table student add constraint fk_student_grade foreign key(gradeId) references grade(gradeId); 备份 方式1：insert into 新表(字段1，字段2)\新表必须存在select 字段1，字段2from 原表;方式2：create table 新表（select 字段1，字段2 from 原表）; 删除数据 delete from 表名 [where条件];条件删除，标识列继续truncate table 表名;删除全部数据，标识列从头开始 limit子句 limit [从第几条开始查\从0开始，行数]示例：limit 4,4; 执行事务 开始事务：begin;提交事务：commit;撤销事务：rollback; 使用sql语句创建视图 create view 视图名as &lt;select语句&gt; 使用sql语句删除视图 drop view [if exists] 视图名; 查看视图 select 字段1，字段2 from 视图名 数据备份 mysqldump -u 登录名 -p 密码 要备份的数据 [表名] &gt; 文件名称 数据还原 -u 登录名 -p 密码 &lt; 文件名称]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo命令]]></title>
    <url>%2F2018%2F06%2F25%2FHexo%2F</url>
    <content type="text"><![CDATA[hexo 命令 hexo new “postName” #新建文章hexo new page “pageName” #新建页面hexo generate #生成静态页面至public目录hexo server #开启预览访问端口（默认端口4000，’ctrl + c’关闭server）hexo deploy #将.deploy目录部署到GitHubhexo help # 查看帮助hexo version #查看Hexo的版本hexo deploy -g #生成加部署hexo server -g #生成加预览 命令的简写 hexo n == hexo newhexo g == hexo generatehexo s == hexo serverhexo d == hexo deploy]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Git常用命令]]></title>
    <url>%2F2018%2F06%2F24%2FGit%2F</url>
    <content type="text"><![CDATA[1. git diff 文件全局名 对比文件与当前版本库的不同。PS：效果等同：git diff HEAD – 文件全局名 2. cat 文件全局名 查看文件内容 3. git log 查看提交版本日志（只展示当前所在版本及以前版本）。PS：单排显示：git log –pretty=oneline版本号简写显示：git log –pretty=oneline –abbrev-commit时间线显示：git log –graph –pretty=oneline –abbrev-commit 4. git reflog 查看提交版本日志（展示所有版本） 5. git reset –hard HEAD^ PS：版本穿梭，HEAD表示当前版本，HEAD^表示上一版本，HEAD^^表示上两个版本… 6. git reset –hard HEAD~1 PS：版本穿梭，HEAD表示当前版本，HEAD~1表示上一版本，HEAD~2表示上两个版本… 7. git reset –hard 版本号 PS：版本穿梭，版本号不必32位都写全，一般写7位就可以了，git会自己去查找。 8. git checkout – 文件全局名 工作区文件内容会被版本库上最新的内容覆盖 9. git reset HEAD 文件全局名 这样可以清空暂存区，而工作区的内容不变，所以工作区文件状态会发生变化 10. git rm 文件全局名 删除文件PS：只有提交至版本库的文件才能rm，只是在工作区或暂存区是不能使用rm的 11. ssh-keygen -t rsa -C “310253936@qq.com“ PS:邮箱是写自己的生成ssh key 12. git remote add origin git@github.com:qwebh3210/gittest.git 本地仓库关联远程仓库PS：也可以用http协议关联：git remote add origin https://github.com/qwebh3210/gittest.git 13. git push -u origin master 把本地仓库当前分支推送到远程仓库指定分支PS：第一次推送需要参数-u进行验证，之后不需要 14. git clone 远程仓库地址 克隆远程仓库PS：git clone下来的只有master分支 15. git add 文件全局名 把文件添加至暂存区PS：删除的文件不需要add，可以直接commit 16. git log -1 PS：显示最后一次提交信息（作者、时间、提交注释）]]></content>
      <categories>
        <category>Git</category>
      </categories>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[会摆造型的数字时钟]]></title>
    <url>%2F2018%2F06%2F23%2F%E6%97%B6%E9%97%B4%2F</url>
    <content type="text"><![CDATA[会摆造型的数字时钟会是什么样子呢？ 页面效果如下： JS代码如下: &lt;script charset=&quot;Shift_JIS&quot; src=&quot;http://chabudai.sakura.ne.jp/blogparts/honehoneclock/honehone_clock_tr.js&quot; &gt;&lt;/script&gt; HTML代码如下： &lt;embed width=&quot;320&quot; height=&quot;140&quot; align=&quot;middle&quot; pluginspage=&quot;http://www.macromedia.com/go/getflashplayer&quot; type=&quot;application/x-shockwave-flash&quot; allowscriptaccess=&quot;always&quot; name=&quot;honehoneclock&quot; bgcolor=&quot;#ffffff&quot; quality=&quot;high&quot; src=&quot;http://chabudai.sakura.ne.jp/blogparts/honehoneclock/honehone_clock_tr.swf&quot; wmode=&quot;transparent&quot;/&gt;]]></content>
      <categories>
        <category>HTML</category>
      </categories>
      <tags>
        <tag>HTML</tag>
      </tags>
  </entry>
</search>
